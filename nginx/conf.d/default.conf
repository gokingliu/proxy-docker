server {
  listen                                    80;
  server_name                               localhost;

  # 允许跨域
  add_header                                Access-Control-Allow-Credentials true;
  add_header                                Access-Control-Allow-Origin $http_origin;

  # OPTIONS 请求缓存
  add_header                                Access-Control-Max-Age 86400;

  # 私有网络允许请求
  add_header                                Access-Control-Allow-Private-Network true;

  # 根目录
  location / {
    return                                  200 'hello word';
  }

  # 鉴权服务 (docker 内起了一个端口 8287 的服务)
  location = /auth_request {
    proxy_pass                              http://0.0.0.0:8287;
    proxy_pass_request_body                 off;
    proxy_set_header                        Content-Length '';
    proxy_set_header                        X-Original-URI $request_uri;
  }

  # 需要鉴权的路径 (网关进行配置)
  location /auth {
    # 鉴权
    auth_request                            /auth_request;

    # 请求头
    proxy_set_header                        X-Real-IP $remote_addr;
    proxy_set_header                        X-Forward-For $proxy_add_x_forwarded_for;
    proxy_set_header                        Origin $http_host;
    proxy_set_header                        X-Nginx-Proxy true;

    # 判断代理 url 格式是否规范
    set                                     $is_matched 0;

    # 符合规范，设置变量为 1
    if ($query_string ~* "^proxy_url=http(s)?:\/\/\w+[^\s]+(\.[^\s]+)+(?<!\/)$") {
      set                                   $is_matched 1;
    }

    # 不符合规范，返回参数错误
    if ($is_matched = 0) {
      return                                400 '代理配置格式错误';
    }

    # 符合规范的 url，如果发起了 OPTIONS 请求，返回 200
    if ($request_method = 'OPTIONS') {
      return                                200;
    }

    # 转发到要代理的 url (此路径需要鉴权)
    if ($query_string ~* "proxy_url=(.*)") {
      proxy_pass                            $1;
    }
  }

  # 不需要鉴权的路径
  location /no_auth {
    proxy_set_header                        X-Real-IP $remote_addr;
    proxy_set_header                        X-Forward-For $proxy_add_x_forwarded_for;
    proxy_set_header                        Origin $http_host;
    proxy_set_header                        X-Nginx-Proxy true;

    # 判断代理 url 格式是否规范
    set                                     $is_matched 0;

    # 符合规范，设置变量为 1
    if ($query_string ~* "^proxy_url=http(s)?:\/\/\w+[^\s]+(\.[^\s]+)+(?<!\/)$") {
      set                                   $is_matched 1;
    }

    # 不符合规范，返回参数错误
    if ($is_matched = 0) {
      return                                400 '代理配置格式错误';
    }

    # 符合规范的 url，如果发起了 OPTIONS 请求，返回 200
    if ($request_method = 'OPTIONS') {
      return                                200;
    }

    # 转发到要代理的 url (此路径不做鉴权)
    if ($query_string ~* "proxy_url=(.*)") {
      proxy_pass                            $1;
    }
  }
}
